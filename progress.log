2nd June 2022
One step at a time, changing names first. Already starting to despise myself for creating additional troubles for the code maintenance naming variables path, path_save, default_path... Changing to names like originPath, savePath etc.. Some of the names may become being deleted after I rework functions but well, one step at a time.
And it seems that I couldn't finish it all today. On the brigth side, I managed to get the Coc plugin to work as intended so no more fighting with weird autocompletion behaviour. Something also tells me that I'll be changing many names again anyways. Actually most if not all. Well, this experience should motivate me later to write a better and easier to maintain code. Especially as my later projects are probably going to be much bigger...

3rd June 2022
If time travel ever gets invented and becomes accesible, the first thing I'll do will be to smack my old self and prevent her from naming variables nbuff and nread, then mixing them up so that in the end nbuff was connected to the data array nad nread to the buffer. Finally initial renaming is finally over and I can start thinking about restructuring function wise... Looking at that line-making functions gives me goosebumbs already. What a mess...

4th June 2022
And of course, I forgot to write down my progress after finishing yesterday. Well, not much harm done, considering that I had so little time that the only thing I did today was finishing second exit case from line-creation module and reformatting functions... Stark contrast to yesterday, when Iwas kinda forced to handle multiple files so basically I had to learn about extern and headers... and I must admit, it is easier to read through the changed areas now, that they're not just a giant block of badly marked with comments code. To think that I'll have to showcase the old code as my final project... I already dread it.

6th June 2022
Oh, something tells me that my logging problems will be persistent...Yesterday, because of the upcoming exams I had to prepare for I've managed to only add handling cases that end the accumulation of the aggregation. Today I've planned to finish the aggregation section alltogether and go into line formating part... however after reading chapters about testing and classes (well, it may not be an object oriented program but it still has class-like sections) I think I should learn about testing first and then move aggregation section to a seperate file. After all, even without line formatting section line-handling source file has almost 200 lines...
Not to mention, it'll be easier to test modules when they're separate. And one of the most important things I've learned why first writing this project - you can't just write a big chunk of code without checking if it works. And considering that I'm already making quite significant changes in structure compared to the original version... I need testing.

28 June
Exams are over and I should have more time to get back to work soon. I think. While I'm still thinking about applying testing, redoing the whole project using TDD... well, it would have a learning value for sure. But that would mean redoing what I've aleady done...

29 June
Well, still not done learning how to use CUnit... but at least after finally pushing the repo to the remote I realised I formatted the ReadMe file wrong. 

30 June
Slowly started creating unit testing file. Although by this time I'm slowly starting to wonder if maybe I should have rested for a bit after my exams...

1 July
Seems I've gotten a hang of it. Created my first test, got a first "green bar". Staring tomorrow I'm going back to working on the code itself. Finally.

2 July
First function test behind me... partially. After seeing how my "ls" command output grows bigger and bigger I decided to separate the code to not get lost. The only think I'm slightly bitter about is that I find it hard to take really small steps... Maybe it's just how it is with C. Or it's just my lack of experience. Time will show.

12 July 
Well, after small break to read a bit more about unit testing I finished two more tests. The last one took me two days of wondering what had I forgotten again when it comes to handling strings... only to realise that the function I tested simply didn't enter the if statement. Well... maybe I should make my own mini pogram on the side to show me the output when the test fails, as CUnit doesn't seem to offer easy to read message about a failed assertion like xUnit.net does... On the bright side... it seems that the most crucial part of the program is done. Well. It only seems so as during refactorisation I'll have to move the line variable tothe module. Probably.
